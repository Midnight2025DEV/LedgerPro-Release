name: Security & Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM

jobs:
  security:
    name: Security Scan
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check for Sensitive Data
      run: |
        echo "### Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for potential secrets in code
        if grep -r -i "password\|secret\|key\|token" --include="*.swift" Sources/ LedgerPro/Sources/ || true; then
          echo "⚠️ Found potential secrets in code - please review" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ No obvious secrets found in source code" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check for force unwraps in critical paths
        CRITICAL_FORCE_UNWRAPS=$(find Sources/LedgerPro/Services Sources/LedgerPro/Models -name "*.swift" -exec grep -l "!" {} \; | wc -l)
        echo "Files with force unwraps in critical paths: $CRITICAL_FORCE_UNWRAPS" >> $GITHUB_STEP_SUMMARY
        
        # Check for unsafe string operations
        UNSAFE_STRING_OPS=$(grep -r "\.prefix(\|\.suffix(\|dropFirst\|dropLast" --include="*.swift" Sources/ LedgerPro/Sources/ | wc -l)
        echo "Potentially unsafe string operations: $UNSAFE_STRING_OPS" >> $GITHUB_STEP_SUMMARY
        
        if [ "$UNSAFE_STRING_OPS" -gt "10" ]; then
          echo "⚠️ High number of potentially unsafe string operations" >> $GITHUB_STEP_SUMMARY
        fi

  dependency-check:
    name: Dependency Security
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check Swift Package Dependencies
      run: |
        echo "### Dependency Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "Package.swift" ]; then
          echo "Swift Package dependencies:" >> $GITHUB_STEP_SUMMARY
          grep -A 20 "dependencies:" Package.swift >> $GITHUB_STEP_SUMMARY || true
        fi
        
        # Check for outdated dependencies
        swift package show-dependencies > deps.txt
        echo "Current dependency tree:" >> $GITHUB_STEP_SUMMARY
        cat deps.txt >> $GITHUB_STEP_SUMMARY

  memory-safety:
    name: Memory Safety Check
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build with Address Sanitizer
      run: |
        swift build -c debug -Xswiftc -sanitize=address -Xswiftc -sanitize=undefined
        
    - name: Run Tests with Sanitizers
      run: |
        swift test -c debug -Xswiftc -sanitize=address -Xswiftc -sanitize=undefined --filter "APIServiceTests|FinancialDataManagerTests"
        
    - name: Memory Usage Analysis
      run: |
        echo "### Memory Safety Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ Address sanitizer tests passed" >> $GITHUB_STEP_SUMMARY
        echo "✅ Undefined behavior sanitizer tests passed" >> $GITHUB_STEP_SUMMARY