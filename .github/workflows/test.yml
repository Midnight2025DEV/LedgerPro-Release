name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.0.app
      
    - name: Show Swift version
      run: swift --version
      
    - name: Build
      run: swift build -v
      
    - name: Run Tests
      run: swift test -v --parallel
      
    - name: Generate Coverage Report
      run: |
        swift test --enable-code-coverage
        xcrun llvm-cov export \
          .build/debug/LedgerProPackageTests.xctest/Contents/MacOS/LedgerProPackageTests \
          -instr-profile .build/debug/codecov/default.profdata \
          -format="lcov" > coverage.lcov
          
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.lcov
        fail_ci_if_error: true
        
    - name: Test Report
      if: always()
      run: |
        echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        swift test --quiet 2>&1 | grep -E "(Test Suite|Executed)" >> $GITHUB_STEP_SUMMARY || true

  performance:
    name: Performance Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Performance Tests
      run: |
        swift test --filter "testLargeDatasetWorkflow|testPerformance" > performance.txt
        
    - name: Check Performance Regression
      run: |
        # Extract timing from performance tests
        if grep -q "seconds)" performance.txt; then
          echo "### Performance Results" >> $GITHUB_STEP_SUMMARY
          grep -E "executed in|seconds\)" performance.txt >> $GITHUB_STEP_SUMMARY
        fi
        
        # Fail if any test takes > 20 seconds
        if grep -E "[2-9][0-9]\.[0-9]+ seconds" performance.txt; then
          echo "❌ Performance regression detected!"
          exit 1
        fi

  lint:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: SwiftLint
      run: |
        brew install swiftlint || true
        swiftlint --strict --reporter github-actions-logging
        
    - name: Check for Force Unwraps
      run: |
        echo "### Force Unwrap Check" >> $GITHUB_STEP_SUMMARY
        echo "Checking for dangerous force unwraps..." >> $GITHUB_STEP_SUMMARY
        
        # Count force unwraps in Services (should be 0)
        FORCE_UNWRAPS=$(find Sources/LedgerPro/Services -name "*.swift" -exec grep -c "!\[^=]" {} \; | awk '{sum += $1} END {print sum}')
        
        echo "Force unwraps in Services: $FORCE_UNWRAPS" >> $GITHUB_STEP_SUMMARY
        
        if [ "$FORCE_UNWRAPS" -gt "0" ]; then
          echo "❌ Found force unwraps in critical services!"
          exit 1
        else
          echo "✅ No force unwraps in services"
        fi