name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.0.app
      
    - name: Show Swift version
      run: swift --version
      
    - name: Build
      run: |
        cd LedgerPro
        swift build -v
      
    - name: Run Tests
      run: |
        cd LedgerPro
        swift test -v --parallel
      
    - name: Generate Coverage Report
      run: |
        cd LedgerPro
        swift test --enable-code-coverage
        xcrun llvm-cov export \
          .build/debug/LedgerProPackageTests.xctest/Contents/MacOS/LedgerProPackageTests \
          -instr-profile .build/debug/codecov/default.profdata \
          -format="lcov" > ../coverage.lcov
          
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.lcov
        fail_ci_if_error: false
        
    - name: Test Report
      if: always()
      run: |
        echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        cd LedgerPro && swift test --quiet 2>&1 | grep -E "(Test Suite|Executed)" >> $GITHUB_STEP_SUMMARY || true

  performance:
    name: Performance Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.0.app
    
    - name: Run Performance Tests
      run: |
        cd LedgerPro
        swift test --filter "testLargeDatasetWorkflow|testPerformance" > ../performance.txt || true
        
    - name: Check Performance Results
      run: |
        if [ -f performance.txt ]; then
          echo "### Performance Results" >> $GITHUB_STEP_SUMMARY
          grep -E "executed in|seconds\)" performance.txt >> $GITHUB_STEP_SUMMARY || echo "No performance metrics found" >> $GITHUB_STEP_SUMMARY
        fi

  lint:
    name: Code Quality
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: SwiftLint
      run: |
        if command -v swiftlint &> /dev/null; then
          cd LedgerPro && swiftlint --reporter github-actions-logging || true
        else
          echo "SwiftLint not installed, skipping..."
        fi
        
    - name: Check for Force Unwraps
      run: |
        echo "### Force Unwrap Check" >> $GITHUB_STEP_SUMMARY
        echo "Checking for dangerous force unwraps..." >> $GITHUB_STEP_SUMMARY
        
        # Check in LedgerPro/Sources
        if [ -d "LedgerPro/Sources/LedgerPro/Services" ]; then
          FORCE_UNWRAPS=$(find LedgerPro/Sources/LedgerPro/Services -name "*.swift" -exec grep -c "!\[^=]" {} \; 2>/dev/null | awk '{sum += $1} END {print sum}')
        else
          FORCE_UNWRAPS=0
        fi
        
        echo "Force unwraps in Services: ${FORCE_UNWRAPS:-0}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${FORCE_UNWRAPS:-0}" -gt "0" ]; then
          echo "⚠️ Found force unwraps in critical services"
        else
          echo "✅ No force unwraps in services"
        fi
