name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  swift-tests:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: sudo xcode-select --switch /Applications/Xcode_15.2.app/Contents/Developer
    
    - name: Build Swift package
      run: |
        cd LedgerPro
        swift build
    
    - name: Run Swift tests
      run: |
        cd LedgerPro
        swift test
    
    - name: Check Swift formatting (if swiftformat available)
      run: |
        cd LedgerPro
        if command -v swiftformat >/dev/null 2>&1; then
          swiftformat --lint Sources/
        else
          echo "SwiftFormat not available, skipping format check"
        fi
      continue-on-error: true

  python-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ghostscript libpoppler-cpp-dev
    
    - name: Install Python dependencies
      run: |
        cd LedgerPro/backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Python linting
      run: |
        cd LedgerPro/backend
        if [ -f ".flake8" ]; then
          flake8 . || echo "Linting issues found (non-blocking)"
        else
          echo "No flake8 config found, skipping"
        fi
      continue-on-error: true
    
    - name: Run Python tests
      run: |
        cd LedgerPro/backend
        if [ -d "tests" ] && [ -n "$(find tests -name 'test_*.py' -print -quit)" ]; then
          pytest tests/ -v
        else
          echo "Warning: No test files found in tests/"
          exit 1
        fi
    
    - name: Upload coverage to Codecov
      if: success()
      run: |
        cd LedgerPro/backend
        if [ -f ".coverage" ]; then
          echo "Coverage data found, would upload to Codecov here"
        else
          echo "No coverage data generated"
        fi
      continue-on-error: true
EOF < /dev/null